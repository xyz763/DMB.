// SPDX-License-Identifier: GPL-3.0;
pragma solidity ^0.8.7;

contract bank{
             address public owner;
             mapping(address => uint256) private balance;

             constructor (){
                  owner=msg.sender;
              }

              function deposit() external payable{
                   require(msg.value > 0 , "You need to send some money");
                   balance[msg.sender] += msg.value;
             }

             function withdraw(uint256 amount) public {
                   require (amount <= balance[msg.sender], "insufficient balance");
                   balance[msg.sender] -= amount;
                   payable(msg.sender).transfer(amount);
            }

            function getbalance() public view returns(uint){
                  return address(this).balance;
            }

            function getowner() public view returns(address){  // owner is keyword so use getowner
                  return owner;
            }
}